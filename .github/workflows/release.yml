name: goreleaser

on:
  push:
    tags:
      - '*'

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
    steps:
      - uses: actions/checkout@v3
      - run: git fetch --prune --unshallow
      - uses: actions/setup-go@v3
        with:
          go-version: 1.18
          check-latest: true
      - uses: goreleaser/goreleaser-action@v3.0.0
        id: run-goreleaser
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate subject
        id: hash
        env:
          ARTIFACTS: "${{ steps.run-goreleaser.outputs.artifacts }}"
        run: |
          set -euo pipefail

          checksum_file=$(echo "$ARTIFACTS" | jq -r '.[] | select (.type=="Checksum") | .path')
          echo "::set-output name=hashes::$(cat $checksum_file | base64 -w0)"
  provenance:
    needs: [goreleaser]
    permissions:
      actions: read
      id-token: write
      contents: read
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.1.1
    with:
      base64-subjects: "${{ needs.goreleaser.outputs.hashes }}"
  
  # This step creates a GitHub release with our provenance.
  release-provenance:
    needs: [goreleaser, provenance]
    runs-on: ubuntu-latest
    steps:
      - name: Download provenance
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 # tag=v2.1.0
        with:
          # The provenance step returns an output with the artifact name of
          # our provenance.
          name: ${{needs.provenance.outputs.attestation-name}}

      - name: Create release
        uses: softprops/action-gh-release@1e07f4398721186383de40550babbdf2b84acfc5 # tag=v0.1.14
        with:
          files: |
            ${{needs.provenance.outputs.attestation-name}}    